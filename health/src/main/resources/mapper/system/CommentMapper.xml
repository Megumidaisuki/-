<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.system.mapper.CommentMapper">
    
    <resultMap type="Comment" id="CommentResult">
        <result property="commentId"    column="comment_id"    />
        <result property="content"    column="content"    />
        <result property="parentId"    column="parent_id"    />
        <result property="like"    column="like"    />
        <result property="userId"    column="user_id"    />
        <result property="createTime"    column="create_time"    />
        <result property="isDeleted"    column="is_deleted"    />
        <result property="articleId"    column="article_id"    />
    </resultMap>

    <sql id="selectCommentVo">
        select comment_id, content, parent_id, like, user_id, create_time, is_deleted, article_id from comment
    </sql>

    <select id="selectCommentList" parameterType="Comment" resultMap="CommentResult">
        <include refid="selectCommentVo"/>
        <where>  
            <if test="content != null  and content != ''"> and content = #{content}</if>
            <if test="parentId != null "> and parent_id = #{parentId}</if>
            <if test="like != null "> and like = #{like}</if>
            <if test="userId != null "> and user_id = #{userId}</if>
            <if test="isDeleted != null "> and is_deleted = #{isDeleted}</if>
            <if test="articleId != null "> and article_id = #{articleId}</if>
        </where>
    </select>
    
    <select id="selectCommentByCommentId" parameterType="Long" resultMap="CommentResult">
        <include refid="selectCommentVo"/>
        where comment_id = #{commentId}
    </select>

    <insert id="insertComment" parameterType="Comment" useGeneratedKeys="true" keyProperty="commentId">
        insert into comment
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="content != null">content,</if>
            <if test="parentId != null">parent_id,</if>
            <if test="like != null">like,</if>
            <if test="userId != null">user_id,</if>
            <if test="createTime != null">create_time,</if>
            <if test="isDeleted != null">is_deleted,</if>
            <if test="articleId != null">article_id,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="content != null">#{content},</if>
            <if test="parentId != null">#{parentId},</if>
            <if test="like != null">#{like},</if>
            <if test="userId != null">#{userId},</if>
            <if test="createTime != null">#{createTime},</if>
            <if test="isDeleted != null">#{isDeleted},</if>
            <if test="articleId != null">#{articleId},</if>
         </trim>
    </insert>

    <update id="updateComment" parameterType="Comment">
        update comment
        <trim prefix="SET" suffixOverrides=",">
            <if test="content != null">content = #{content},</if>
            <if test="parentId != null">parent_id = #{parentId},</if>
            <if test="like != null">like = #{like},</if>
            <if test="userId != null">user_id = #{userId},</if>
            <if test="createTime != null">create_time = #{createTime},</if>
            <if test="isDeleted != null">is_deleted = #{isDeleted},</if>
            <if test="articleId != null">article_id = #{articleId},</if>
        </trim>
        where comment_id = #{commentId}
    </update>

    <delete id="deleteCommentByCommentId" parameterType="Long">
        delete from comment where comment_id = #{commentId}
    </delete>

    <delete id="deleteCommentByCommentIds" parameterType="String">
        delete from comment where comment_id in 
        <foreach item="commentId" collection="array" open="(" separator="," close=")">
            #{commentId}
        </foreach>
    </delete>
</mapper>